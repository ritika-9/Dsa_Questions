//optimal code

class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        return(getInt(nums,k)-getInt(nums,k-1));
    }
    public int getInt(int[] nums,int k){
        HashMap<Integer,Integer> map=new HashMap<>();
        int l=0,r=0,count=0;
        while(r<nums.length){
            map.put(nums[r],map.getOrDefault(nums[r],0)+1);
            while(map.size()>k){
                map.put(nums[l],map.get(nums[l])-1);
                if(map.get(nums[l])==0){
                    map.remove(nums[l]);
                }
                l++;
            }
            if(map.size()<=k){
                count=count+(r-l+1);
            }
            r++;
        }
        return count;
    }
}
